{"ast":null,"code":"// const htpp api\nconst API_URL='http//localhost:8000';// Load planets and return as JSON.\nasync function httpGetPlanets(){const response=await fetch(`${API_URL}/planets`);if(!response.ok){console.error('Failed to fetch planets:',response.statusText);return[];}return await response.json();}async function httpGetLaunches(){const response=await fetch(`${API_URL}/launches`);const fetchedLaunches=await response.json();return fetchedLaunches.sort((a,b)=>{return a.flightNumber-b.flightNumber;});}// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch){try{return await fetch(`${API_URL}/launches`,{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(launch)});}catch(err){return{ok:false};}}// Delete launch with given ID.\nasync function httpAbortLaunch(id){try{return await fetch(`${API_URL}/launches/${id}`,{method:\"delete\"});}catch(err){console,log(err);return{ok:false};}}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"names":["API_URL","httpGetPlanets","response","fetch","ok","console","error","statusText","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","err","httpAbortLaunch","id","log"],"sources":["/Users/randhirprem/Desktop/Node/NASA-PROJECT/client/src/hooks/requests.js"],"sourcesContent":["// const htpp api\nconst API_URL = 'http//localhost:8000'; \n\n// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  if(!response.ok){\n    console.error('Failed to fetch planets:', response.statusText);\n    return[];\n  }\n  return await response.json();\n}\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n // Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n  try{\n    return await fetch(`${API_URL}/launches`,{\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(launch),\n  });\n  } catch(err) {\n    return {\n      ok: false,\n    }\n  }\n  \n \n}\n  // Delete launch with given ID.\nasync function httpAbortLaunch(id) {\n  try{\n    return await fetch(`${API_URL}/launches/${id}`, {\n    method:\"delete\",\n  });\n  } catch(err) {\n    console,log(err);\n    return {\n      ok: false,\n    }\n  }\n  \n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"],"mappings":"AAAA;AACA,KAAM,CAAAA,OAAO,CAAG,sBAAsB,CAEtC;AACA,cAAe,CAAAC,cAAcA,CAAA,CAAG,CAC9B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,OAAO,UAAU,CAAC,CAClD,GAAG,CAACE,QAAQ,CAACE,EAAE,CAAC,CACdC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAEJ,QAAQ,CAACK,UAAU,CAAC,CAC9D,MAAM,EAAE,CACV,CACA,MAAO,MAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAC9B,CAEA,cAAe,CAAAC,eAAeA,CAAA,CAAG,CAC/B,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,OAAO,WAAW,CAAC,CACnD,KAAM,CAAAU,eAAe,CAAG,KAAM,CAAAR,QAAQ,CAACM,IAAI,CAAC,CAAC,CAC7C,MAAO,CAAAE,eAAe,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACpC,MAAO,CAAAD,CAAC,CAACE,YAAY,CAAGD,CAAC,CAACC,YAAY,CACxC,CAAC,CAAC,CACJ,CACC;AACD,cAAe,CAAAC,gBAAgBA,CAACC,MAAM,CAAE,CACtC,GAAG,CACD,MAAO,MAAM,CAAAb,KAAK,CAAC,GAAGH,OAAO,WAAW,CAAC,CACzCiB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAC7B,CAAC,CAAC,CACF,CAAE,MAAMM,GAAG,CAAE,CACX,MAAO,CACLlB,EAAE,CAAE,KACN,CAAC,CACH,CAGF,CACE;AACF,cAAe,CAAAmB,eAAeA,CAACC,EAAE,CAAE,CACjC,GAAG,CACD,MAAO,MAAM,CAAArB,KAAK,CAAC,GAAGH,OAAO,aAAawB,EAAE,EAAE,CAAE,CAChDP,MAAM,CAAC,QACT,CAAC,CAAC,CACF,CAAE,MAAMK,GAAG,CAAE,CACXjB,OAAO,CAACoB,GAAG,CAACH,GAAG,CAAC,CAChB,MAAO,CACLlB,EAAE,CAAE,KACN,CAAC,CACH,CAEF,CAEA,OACEH,cAAc,CACdQ,eAAe,CACfM,gBAAgB,CAChBQ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}